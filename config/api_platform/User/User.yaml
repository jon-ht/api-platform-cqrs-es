App\Domain\User\User:
    collectionOperations:
        post:
            method: POST
            path: '/signup'
            messenger: true
            input: App\Application\Command\User\SignUp\SignUpInput
            # No content in the response
            output: false
            # By pass response validation to allow null response
            validate: false
            # Override default documentation
            openapi_context:
                summary: Create a user account
                responses:
                    201:
                        description: User created successfully
                    400:
                        description: Invalid input
        # Set "change email" as collection operation because it allows an easier transformation
        # from input object to command
        change_email:
            method: POST
            path: '/users/change_email'
            messenger: true
            input: App\Application\Command\User\ChangeEmail\ChangeEmailInput
            # Check if the user can edit email
            # It uses security_post_denormalize to check after input denormalization 
            # - `is_granted` relies on App\Infrastructure\User\Security\Voter\UserVoter
            # - object is an instance of App\Application\Command\User\ChangeEmail\ChangeEmailCommand
            security_post_denormalize: 'is_granted("user_change_email", object.userUuid().toString())'
            read: false
            # No content in the response
            output: false
            # By pass response validation to allow null response
            validate: false
            # Override default documentation
            openapi_context:
                summary: Update user email
                responses:
                    201:
                        description: User email updated successfully
                    400:
                        description: Invalid input
    itemOperations:
        get:
            method: GET
            path: '/users/{email}'
            controller: App\UI\Http\Rest\Controller\User\GetUserByEmailController
            read: false
            output: App\Infrastructure\User\Query\Projections\UserView
            normalization_context:
                groups: [profile, credentials]
            openapi_context:
                parameters:
                    - in: path
                      name: email
                      type: string
                      required: true
